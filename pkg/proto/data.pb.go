// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0-rc.1
// 	protoc        v3.14.0
// source: pkg/proto/data.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CacheTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ExpireTime *durationpb.Duration `protobuf:"bytes,2,opt,name=expireTime,proto3" json:"expireTime,omitempty"`
}

func (x *CacheTable) Reset() {
	*x = CacheTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_data_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CacheTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheTable) ProtoMessage() {}

func (x *CacheTable) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_data_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheTable.ProtoReflect.Descriptor instead.
func (*CacheTable) Descriptor() ([]byte, []int) {
	return file_pkg_proto_data_proto_rawDescGZIP(), []int{0}
}

func (x *CacheTable) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CacheTable) GetExpireTime() *durationpb.Duration {
	if x != nil {
		return x.ExpireTime
	}
	return nil
}

type CacheInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *CacheInfo) Reset() {
	*x = CacheInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_data_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CacheInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheInfo) ProtoMessage() {}

func (x *CacheInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_data_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheInfo.ProtoReflect.Descriptor instead.
func (*CacheInfo) Descriptor() ([]byte, []int) {
	return file_pkg_proto_data_proto_rawDescGZIP(), []int{1}
}

func (x *CacheInfo) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CacheInfo) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type RegisterTableReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *CacheTable `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RegisterTableReq) Reset() {
	*x = RegisterTableReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_data_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterTableReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterTableReq) ProtoMessage() {}

func (x *RegisterTableReq) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_data_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterTableReq.ProtoReflect.Descriptor instead.
func (*RegisterTableReq) Descriptor() ([]byte, []int) {
	return file_pkg_proto_data_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterTableReq) GetData() *CacheTable {
	if x != nil {
		return x.Data
	}
	return nil
}

type RegisterTableResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *RegisterTableResp) Reset() {
	*x = RegisterTableResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_data_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterTableResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterTableResp) ProtoMessage() {}

func (x *RegisterTableResp) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_data_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterTableResp.ProtoReflect.Descriptor instead.
func (*RegisterTableResp) Descriptor() ([]byte, []int) {
	return file_pkg_proto_data_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterTableResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AddCacheReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName string     `protobuf:"bytes,1,opt,name=tableName,proto3" json:"tableName,omitempty"`
	Data      *CacheInfo `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AddCacheReq) Reset() {
	*x = AddCacheReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_data_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCacheReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCacheReq) ProtoMessage() {}

func (x *AddCacheReq) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_data_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCacheReq.ProtoReflect.Descriptor instead.
func (*AddCacheReq) Descriptor() ([]byte, []int) {
	return file_pkg_proto_data_proto_rawDescGZIP(), []int{4}
}

func (x *AddCacheReq) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *AddCacheReq) GetData() *CacheInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetCacheReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName string `protobuf:"bytes,1,opt,name=tableName,proto3" json:"tableName,omitempty"`
	CacheName string `protobuf:"bytes,2,opt,name=cacheName,proto3" json:"cacheName,omitempty"`
}

func (x *GetCacheReq) Reset() {
	*x = GetCacheReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_data_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCacheReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCacheReq) ProtoMessage() {}

func (x *GetCacheReq) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_data_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCacheReq.ProtoReflect.Descriptor instead.
func (*GetCacheReq) Descriptor() ([]byte, []int) {
	return file_pkg_proto_data_proto_rawDescGZIP(), []int{5}
}

func (x *GetCacheReq) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *GetCacheReq) GetCacheName() string {
	if x != nil {
		return x.CacheName
	}
	return ""
}

type GetCacheResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *CacheInfo `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetCacheResp) Reset() {
	*x = GetCacheResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_data_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCacheResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCacheResp) ProtoMessage() {}

func (x *GetCacheResp) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_data_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCacheResp.ProtoReflect.Descriptor instead.
func (*GetCacheResp) Descriptor() ([]byte, []int) {
	return file_pkg_proto_data_proto_rawDescGZIP(), []int{6}
}

func (x *GetCacheResp) GetData() *CacheInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type ListCacheReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName string `protobuf:"bytes,1,opt,name=tableName,proto3" json:"tableName,omitempty"`
}

func (x *ListCacheReq) Reset() {
	*x = ListCacheReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_data_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCacheReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCacheReq) ProtoMessage() {}

func (x *ListCacheReq) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_data_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCacheReq.ProtoReflect.Descriptor instead.
func (*ListCacheReq) Descriptor() ([]byte, []int) {
	return file_pkg_proto_data_proto_rawDescGZIP(), []int{7}
}

func (x *ListCacheReq) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

type ListCacheResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*CacheInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListCacheResp) Reset() {
	*x = ListCacheResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_data_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCacheResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCacheResp) ProtoMessage() {}

func (x *ListCacheResp) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_data_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCacheResp.ProtoReflect.Descriptor instead.
func (*ListCacheResp) Descriptor() ([]byte, []int) {
	return file_pkg_proto_data_proto_rawDescGZIP(), []int{8}
}

func (x *ListCacheResp) GetList() []*CacheInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type DeleteCacheReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName string `protobuf:"bytes,1,opt,name=tableName,proto3" json:"tableName,omitempty"`
	CacheName string `protobuf:"bytes,2,opt,name=cacheName,proto3" json:"cacheName,omitempty"`
}

func (x *DeleteCacheReq) Reset() {
	*x = DeleteCacheReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_data_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCacheReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCacheReq) ProtoMessage() {}

func (x *DeleteCacheReq) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_data_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCacheReq.ProtoReflect.Descriptor instead.
func (*DeleteCacheReq) Descriptor() ([]byte, []int) {
	return file_pkg_proto_data_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteCacheReq) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *DeleteCacheReq) GetCacheName() string {
	if x != nil {
		return x.CacheName
	}
	return ""
}

var File_pkg_proto_data_proto protoreflect.FileDescriptor

var file_pkg_proto_data_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6d, 0x63, 0x61, 0x63, 0x68, 0x65, 0x1a, 0x1e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5b, 0x0a, 0x0a, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a,
	0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x33, 0x0a, 0x09, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x0a,
	0x10, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6d, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x27, 0x0a, 0x11, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x52, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x25, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x6d, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x49, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x35, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x25, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x6d, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2c, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x36, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x4c,
	0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x32, 0xc0, 0x02, 0x0a,
	0x0f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x44, 0x0a, 0x0d, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x18, 0x2e, 0x6d, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x6d, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x12, 0x13, 0x2e, 0x6d, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x35, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x13, 0x2e, 0x6d, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x14, 0x2e, 0x6d, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x12, 0x14, 0x2e, 0x6d, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x6d, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x3d, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12,
	0x16, 0x2e, 0x6d, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42,
	0x0b, 0x5a, 0x09, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_proto_data_proto_rawDescOnce sync.Once
	file_pkg_proto_data_proto_rawDescData = file_pkg_proto_data_proto_rawDesc
)

func file_pkg_proto_data_proto_rawDescGZIP() []byte {
	file_pkg_proto_data_proto_rawDescOnce.Do(func() {
		file_pkg_proto_data_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_proto_data_proto_rawDescData)
	})
	return file_pkg_proto_data_proto_rawDescData
}

var file_pkg_proto_data_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_pkg_proto_data_proto_goTypes = []interface{}{
	(*CacheTable)(nil),          // 0: mcache.CacheTable
	(*CacheInfo)(nil),           // 1: mcache.CacheInfo
	(*RegisterTableReq)(nil),    // 2: mcache.RegisterTableReq
	(*RegisterTableResp)(nil),   // 3: mcache.RegisterTableResp
	(*AddCacheReq)(nil),         // 4: mcache.AddCacheReq
	(*GetCacheReq)(nil),         // 5: mcache.GetCacheReq
	(*GetCacheResp)(nil),        // 6: mcache.GetCacheResp
	(*ListCacheReq)(nil),        // 7: mcache.ListCacheReq
	(*ListCacheResp)(nil),       // 8: mcache.ListCacheResp
	(*DeleteCacheReq)(nil),      // 9: mcache.DeleteCacheReq
	(*durationpb.Duration)(nil), // 10: google.protobuf.Duration
	(*emptypb.Empty)(nil),       // 11: google.protobuf.Empty
}
var file_pkg_proto_data_proto_depIdxs = []int32{
	10, // 0: mcache.CacheTable.expireTime:type_name -> google.protobuf.Duration
	0,  // 1: mcache.RegisterTableReq.data:type_name -> mcache.CacheTable
	1,  // 2: mcache.AddCacheReq.data:type_name -> mcache.CacheInfo
	1,  // 3: mcache.GetCacheResp.data:type_name -> mcache.CacheInfo
	1,  // 4: mcache.ListCacheResp.list:type_name -> mcache.CacheInfo
	2,  // 5: mcache.CacheRpcService.RegisterTable:input_type -> mcache.RegisterTableReq
	4,  // 6: mcache.CacheRpcService.AddCache:input_type -> mcache.AddCacheReq
	5,  // 7: mcache.CacheRpcService.GetCache:input_type -> mcache.GetCacheReq
	7,  // 8: mcache.CacheRpcService.ListCache:input_type -> mcache.ListCacheReq
	9,  // 9: mcache.CacheRpcService.DeleteCache:input_type -> mcache.DeleteCacheReq
	3,  // 10: mcache.CacheRpcService.RegisterTable:output_type -> mcache.RegisterTableResp
	11, // 11: mcache.CacheRpcService.AddCache:output_type -> google.protobuf.Empty
	6,  // 12: mcache.CacheRpcService.GetCache:output_type -> mcache.GetCacheResp
	8,  // 13: mcache.CacheRpcService.ListCache:output_type -> mcache.ListCacheResp
	11, // 14: mcache.CacheRpcService.DeleteCache:output_type -> google.protobuf.Empty
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_pkg_proto_data_proto_init() }
func file_pkg_proto_data_proto_init() {
	if File_pkg_proto_data_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_proto_data_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CacheTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_data_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CacheInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_data_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterTableReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_data_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterTableResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_data_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCacheReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_data_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCacheReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_data_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCacheResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_data_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCacheReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_data_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCacheResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_data_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCacheReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_proto_data_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_proto_data_proto_goTypes,
		DependencyIndexes: file_pkg_proto_data_proto_depIdxs,
		MessageInfos:      file_pkg_proto_data_proto_msgTypes,
	}.Build()
	File_pkg_proto_data_proto = out.File
	file_pkg_proto_data_proto_rawDesc = nil
	file_pkg_proto_data_proto_goTypes = nil
	file_pkg_proto_data_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CacheRpcServiceClient is the client API for CacheRpcService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CacheRpcServiceClient interface {
	RegisterTable(ctx context.Context, in *RegisterTableReq, opts ...grpc.CallOption) (*RegisterTableResp, error)
	AddCache(ctx context.Context, in *AddCacheReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	GetCache(ctx context.Context, in *GetCacheReq, opts ...grpc.CallOption) (*GetCacheResp, error)
	ListCache(ctx context.Context, in *ListCacheReq, opts ...grpc.CallOption) (*ListCacheResp, error)
	DeleteCache(ctx context.Context, in *DeleteCacheReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type cacheRpcServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCacheRpcServiceClient(cc grpc.ClientConnInterface) CacheRpcServiceClient {
	return &cacheRpcServiceClient{cc}
}

func (c *cacheRpcServiceClient) RegisterTable(ctx context.Context, in *RegisterTableReq, opts ...grpc.CallOption) (*RegisterTableResp, error) {
	out := new(RegisterTableResp)
	err := c.cc.Invoke(ctx, "/mcache.CacheRpcService/RegisterTable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cacheRpcServiceClient) AddCache(ctx context.Context, in *AddCacheReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/mcache.CacheRpcService/AddCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cacheRpcServiceClient) GetCache(ctx context.Context, in *GetCacheReq, opts ...grpc.CallOption) (*GetCacheResp, error) {
	out := new(GetCacheResp)
	err := c.cc.Invoke(ctx, "/mcache.CacheRpcService/GetCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cacheRpcServiceClient) ListCache(ctx context.Context, in *ListCacheReq, opts ...grpc.CallOption) (*ListCacheResp, error) {
	out := new(ListCacheResp)
	err := c.cc.Invoke(ctx, "/mcache.CacheRpcService/ListCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cacheRpcServiceClient) DeleteCache(ctx context.Context, in *DeleteCacheReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/mcache.CacheRpcService/DeleteCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CacheRpcServiceServer is the server API for CacheRpcService service.
type CacheRpcServiceServer interface {
	RegisterTable(context.Context, *RegisterTableReq) (*RegisterTableResp, error)
	AddCache(context.Context, *AddCacheReq) (*emptypb.Empty, error)
	GetCache(context.Context, *GetCacheReq) (*GetCacheResp, error)
	ListCache(context.Context, *ListCacheReq) (*ListCacheResp, error)
	DeleteCache(context.Context, *DeleteCacheReq) (*emptypb.Empty, error)
}

// UnimplementedCacheRpcServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCacheRpcServiceServer struct {
}

func (*UnimplementedCacheRpcServiceServer) RegisterTable(context.Context, *RegisterTableReq) (*RegisterTableResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterTable not implemented")
}
func (*UnimplementedCacheRpcServiceServer) AddCache(context.Context, *AddCacheReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddCache not implemented")
}
func (*UnimplementedCacheRpcServiceServer) GetCache(context.Context, *GetCacheReq) (*GetCacheResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCache not implemented")
}
func (*UnimplementedCacheRpcServiceServer) ListCache(context.Context, *ListCacheReq) (*ListCacheResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCache not implemented")
}
func (*UnimplementedCacheRpcServiceServer) DeleteCache(context.Context, *DeleteCacheReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCache not implemented")
}

func RegisterCacheRpcServiceServer(s *grpc.Server, srv CacheRpcServiceServer) {
	s.RegisterService(&_CacheRpcService_serviceDesc, srv)
}

func _CacheRpcService_RegisterTable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterTableReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheRpcServiceServer).RegisterTable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mcache.CacheRpcService/RegisterTable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheRpcServiceServer).RegisterTable(ctx, req.(*RegisterTableReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CacheRpcService_AddCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddCacheReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheRpcServiceServer).AddCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mcache.CacheRpcService/AddCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheRpcServiceServer).AddCache(ctx, req.(*AddCacheReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CacheRpcService_GetCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCacheReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheRpcServiceServer).GetCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mcache.CacheRpcService/GetCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheRpcServiceServer).GetCache(ctx, req.(*GetCacheReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CacheRpcService_ListCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCacheReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheRpcServiceServer).ListCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mcache.CacheRpcService/ListCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheRpcServiceServer).ListCache(ctx, req.(*ListCacheReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CacheRpcService_DeleteCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCacheReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheRpcServiceServer).DeleteCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mcache.CacheRpcService/DeleteCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheRpcServiceServer).DeleteCache(ctx, req.(*DeleteCacheReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _CacheRpcService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mcache.CacheRpcService",
	HandlerType: (*CacheRpcServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterTable",
			Handler:    _CacheRpcService_RegisterTable_Handler,
		},
		{
			MethodName: "AddCache",
			Handler:    _CacheRpcService_AddCache_Handler,
		},
		{
			MethodName: "GetCache",
			Handler:    _CacheRpcService_GetCache_Handler,
		},
		{
			MethodName: "ListCache",
			Handler:    _CacheRpcService_ListCache_Handler,
		},
		{
			MethodName: "DeleteCache",
			Handler:    _CacheRpcService_DeleteCache_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/proto/data.proto",
}
